name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
  
  pytest:
    name: pytest
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Test with pytest
      run: |
        export PYTHONPATH=$(pwd)
        pytest

  formatting_checks:
    name: formatting_checks
    runs-on: ubuntu-latest
    needs: pytest
    steps:
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Check files using the black formatter
      uses: rickstaa/action-black@v1
      id: action_black
      with:
        black_args: "."
    - name: Create Pull Request
      if: steps.action_black.outputs.is_formatted == 'true'
      uses: peter-evans/create-pull-request@v6
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        title: "Format Python code with psf/black push"
        commit-message: ":art: Format Python code with psf/black"
        body: |
          There appear to be some python formatting errors in ${{ github.sha }}. This pull request
          uses the [psf/black](https://github.com/psf/black) formatter to fix these issues.
        base: ${{ github.head_ref }} # Creates pull request onto pull request or commit branch
        branch: actions/black

  security_checks:
    name: security_checks
    runs-on: ubuntu-latest
    needs: formatting_checks
    steps:
    - name: Run bandit checks
      run: |
        bandit -lll */*.py *c/*/*.py
    - name: Run safety checks
      uses: pyupio/safety-action@v1
      with:
        api-key: ${{ secrets.SAFETY_API_KEY }}